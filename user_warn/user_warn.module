<?php

/*
 * @file
 * User Warn module file
 * 
 * This module allows site administrators to email a stock warning to a specified user or users 
 * Adminstrators can configure the defualt message including token support
 * 
 */

/**
 * implements hook_help 
 */
function user_warn_help($path, $arg) {
  if ($path == 'admin/help#user_warn') {
    return t('User Warn allows site adminitrators to send a standard
   e-mail to site users to notify them of improper behavior.');
  }
}

/**
 * Implementation of hook_menu 
 */
function user_warn_menu() {
  $items = array();

  $items['admin/config/people/user_warn'] = array(
    'title' => 'User Warn',
    'description' => 'Configuration for the User Warn module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('user_warn_form'),
    'access arguments' => array('administer users'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items['user/%/warn'] = array(
    'title' => 'Warm',
    'description' => 'An email to warn a user about improper behaviour',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('user_warn_confirm_form', 1),
    'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_TASK,
    
  );
  return $items;
}

/**
 *  From builder function to create and display the user warn confioguration settings form
 * @param type $form - array to hold form field
 * @param type $form_state - be sure to pass by reference &$form_state 
 */
function user_warn_form($form, &$form_state) {
  define('USER_WARN_MAIL_TEXT',
  'Hello [user:name],
   We have been notified that you have posted comments on [site:name] that
   are in violation of our terms of service.  If this behavior continues
   your account will be suspended.
   Sincerely,
   [site:name] staff');
  
  // Text field for the e-mail subject.
  $form['user_warn_e-mail_subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Warning e-mail subject'),
    '#default_value' => 'Administrative Warning',
    '#description' => t('The subject of the e-mail which will be sent
to users.'),
    '#size' => 40,
    '#maxlength' => 120,
    '#required' => TRUE,
  );
  // Textarea for the body of the e-mail.
  $form['user_warn_e-mail_text'] = array(
    '#type' => 'textarea',
    '#default_value' => USER_WARN_MAIL_TEXT,
    '#rows' => 10,
    '#columns' => 40,
    '#title' => t('Warning e-mail text'),
    '#required' => TRUE,
    '#description' => t('The text of the e-mail which will be sent to
   users.'),
  );
  // Checkbox to indicate if admin should be sent a Bcc on e-mails.
  $form['user_warn_bcc'] = array(
    '#type' => 'checkbox',
    '#default_value' => FALSE,
    '#title' => t('BCC admin on all e-mails'),
    '#description' => t("Indicates whether the admin user (as set in
   site configuration) should be sent on all warning e-mails."),
  );

  return system_settings_form($form); //use system_settings__form  to get automatic variable_set  on form field vaariables and remove the need for a form_submit function
}

/**
 *
 * @param type $form - a drupal form array object
 * @param type $form_state - array of persisted form state values
 * @param type $uid -  a user id of the user being viewed
 * @return type  the $form array via the confirm_form function
 */
function user_warn_confirm_form($form, &$form_state, $uid) {
  $form['account'] = array(
    '#type' => 'value',
    '#value' => user_load($uid),
  );
  return confirm_form(
      $form,
      t('Are you sure you want to send this warning email to this user'),
      'user/' . $uid,
      t('This action cannot be undone'),
      t('Send e-mail'),
      t('Cancel')
  );
}

function user_warn_confirm_form_submit($form, &$form_state) {
  $account = $form_state['values']['account'];
  drupal_mail(
      'user_warn', 
      'warn', 
      $account->mail, 
      user_preferred_language($account),
      $form_state['values'],
      TRUE
  );
}

/**
 *  implementation of hook_mail 
 */
function user_warn_mail($key, &$message, $params) {
  switch ($key) {
    case 'warn':
      $account = $params['account'];
      $subject = variable_get('user_warn_e-mail_subject', 'Administrative Warning');
      $body = variable_get('user_warn_e-mail_subject', USER_WARN_MAIL_TEXT);
      if (variable_get('user_warn_bcc', FALSE)) {
        $admin_mail = variable_get('site_mail', FALSE);
        $message['headers']['bcc'] = $admin_mail;
      }
      $meesage['to'] = $account->mail;
      $message['subject'] = $subject;
      $message['body'] = token_replace($body, array('user' => $account));
      break;
  }
}